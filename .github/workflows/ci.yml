name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer

jobs:
  test:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
      
    - name: Cache Swift Package Manager
      uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Build
      run: |
        xcodebuild -project CodingReviewer.xcodeproj \
                   -scheme CodingReviewer \
                   -destination 'platform=macOS' \
                   build
    
    - name: Test
      run: |
        xcodebuild -project CodingReviewer.xcodeproj \
                   -scheme CodingReviewer \
                   -destination 'platform=macOS' \
                   test
    
    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install SwiftLint
      run: brew install swiftlint
      
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging

  security:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Security Audit
      run: |
        # Check for common security issues
        grep -r "hardcoded" . --include="*.swift" || true
        grep -r "password" . --include="*.swift" || true
        grep -r "api_key" . --include="*.swift" || true
